sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- union(whole_net, local_net)
g_bipart <- whole_net
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
g_bipart <- whole_net
S <- vcount(g_bipart)
whole_net
require(igraph)
whole_net <- empty_graph()
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- union(whole_net, local_net)
g_bipart <- whole_net
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
whole_net
?union
whole_net <- igraph::union(whole_net, local_net)
whole_net <- empty_graph()
whole_net <- igraph::union(whole_net, local_net)
whole_net
local_net
whole_net
whole_net <- empty_graph()
whole_net
?empty_graph
whole_net <- make_empty_graph()
whole_net
whole_net <- igraph::union(whole_net, local_net)
whole_net <- make_empty_graph(directed=FALSE)
whole_net <- igraph::union(whole_net, local_net)
whole_net
local_net
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- whole_net
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
require(bipartite)
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- whole_net
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
species
hosts
length(which(V(g_bipart)$type == FALSE))
length(which(V(g_bipart)$type == TRUE))
vcount(g_bipart)
g_bipart
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
write.csv(output, "output_roslin.csv")
require(ggplot2)
ggplot(output, aes((areas), species)) + geom_point()
species
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
whole_net
?get.edges
detach("package:network", unload=TRUE)
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook("Web1 2006 Kaartinen.xlsx")
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
require(ggplot2)
ggplot(output, aes((areas), species)) + geom_point()
ggplot(output, aes((areas), hosts)) + geom_point()
metadata_roslin
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
excel <- loadWorkbook(paste0("Web",t," 2006 Kaartinen.xlsx"))
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
ggplot(output, aes((areas), hosts)) + geom_point()
metadata_roslin
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
if(t == 1628) next
excel <- loadWorkbook(paste0("Web",t," 2006 Kaartinen.xlsx"))
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
ggplot(output, aes((areas), hosts)) + geom_point()
by_lat <- TRUE
if(by_lat){
metadata_roslin <- metadata_roslin[order(Tree),]
}
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
if(t == 1628) next
excel <- loadWorkbook(paste0("Web",t," 2006 Kaartinen.xlsx"))
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
ggplot(output, aes((areas), hosts)) + geom_point()
metadata_roslin
metadata_roslin <- metadata_roslin[order(North),]
order(North)
metadata_roslin <- metadata_roslin[order(metadata_roslin$North),]
metadata_roslin
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
if(t == 1628) next
excel <- loadWorkbook(paste0("Web",t," 2006 Kaartinen.xlsx"))
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality'))
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability'))
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
ggplot(output, aes((areas), hosts)) + geom_point()
ggplot(output, aes((areas), species)) + geom_point()
write.csv(output, "output_roslin.csv")
ggplot(output, aes((areas), indegree)) + geom_point()
networklevel(int_mat, 'generality')
indegree <- append(indegree, networklevel(int_mat, 'generality')$generality.HL)
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability')$vulnerability.LL)
indegree <- append(indegree, networklevel(int_mat, 'generality')[1])
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability')[2])
whole_net <- make_empty_graph(directed=FALSE)
species <- c()
hosts <- c()
parasites <- c()
links <- c()
connectances <- c()
links_per_sp <- c()
indegree <- c()
outdegree <- c()
for(t in metadata_roslin$Tree){
if(t == 1628) next
excel <- loadWorkbook(paste0("Web",t," 2006 Kaartinen.xlsx"))
# get sheet names
sheet_names <- getSheets(excel)
names(sheet_names) <- sheet_names
sheet_list <- lapply(sheet_names, function(.sheet){readWorksheet(object=excel, .sheet)})
int_mat <- sheet_list$Sheet1
row.names(int_mat) <- int_mat$Col1
int_mat <- int_mat[-1]
local_net <- graph_from_incidence_matrix(int_mat)
whole_net <- igraph::union(whole_net, local_net)
g_bipart <- graph.bipartite(bipartite.mapping(whole_net)$type, as.vector(t(igraph::get.edges(whole_net, 1:length(E(whole_net))))), directed=T)
V(g_bipart)$name <- V(whole_net)$name
S <- vcount(g_bipart)
Sc <- length(which(V(g_bipart)$type == TRUE))
Sr <- length(which(V(g_bipart)$type == FALSE))
species <- append(species, S)
hosts <- append(hosts, Sr)
parasites <- append(parasites, Sc)
ls <- ecount(g_bipart)
links <- append(links, ls)
connectances <- append(connectances, networklevel(int_mat, 'connectance'))
links_per_sp <- append(links_per_sp, networklevel(int_mat, 'links per species'))
indegree <- append(indegree, networklevel(int_mat, 'generality')[1])
outdegree <- append(outdegree, networklevel(int_mat, 'vulnerability')[2])
}
output <- data.frame(areas=1:length(species), species, hosts, parasites, links, connectances, links_per_sp, indegree, outdegree)
ggplot(output, aes((areas), indegree)) + geom_point()
